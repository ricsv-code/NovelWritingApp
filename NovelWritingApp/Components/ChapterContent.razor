@page "/chaptercontent"
@using NovelWritingApp.Shared.Models
@using NovelWritingApp.Services
@using NovelWritingApp.Shared.Utilities
@inject ChapterService ChapterService

<h3>@CurrentChapter?.Title</h3>
<div class="chapter-content">
    <textarea @bind="chapterContent" rows="20" cols="80"></textarea>
</div>
<button class="btn" @onclick="SaveContent">Save</button>

@code {
    [Parameter] public Chapter CurrentChapter { get; set; }
    [Parameter] public EventCallback<string> OnSaveChapterContent { get; set; }
    private string chapterContent;

    protected override async Task OnParametersSetAsync()
    {
        await LoadChapterAsync();
    }

    private async Task LoadChapterAsync()
    {
        try
        {
            if (CurrentChapter != null)
            {
                chapterContent = await ChapterService.GetChapterContentAsync(CurrentChapter.ContentFilePath);
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading chapter: {ex.Message}");
        }
    }

    private async Task SaveContent()
    {
        if (CurrentChapter != null)
        {
            await ChapterService.UpdateChapterContentAsync(CurrentChapter.ChapterId, chapterContent);
            await OnSaveChapterContent.InvokeAsync(chapterContent);
        }
    }
}
